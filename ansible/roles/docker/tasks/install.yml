---
- name: Ensure facts are gathered
  ansible.builtin.setup:  # Explicitly gather facts

- name: Install the packages that the Docker installation depends on.
  apt:
    pkg:
      - apt-transport-https
      - curl
      - software-properties-common
      - python3-pip
    state: latest
    update_cache: yes

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: "{{ docker_keyring_location }}"
    state: directory
    mode: 0711
    owner: root
    group: root

- name: Add docker key to make installation possible
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: "{{ docker_keyring_location }}/docker.gpg"
    state: present

- name: Refresh apt package list
  apt:
    update_cache: yes

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ cpuArchitectureFormat[ansible_architecture] }}
      signed-by={{ docker_keyring_location }}/docker.gpg]
      https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present

- name: Install Docker and related packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Create directories
  file:
    path: "{{ remote_docker_directory }}"
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Enable and start Docker services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: "started"
  loop:
    - docker.service
    - containerd.service

- name: Allow incoming traffic on docker0 bridge
  become: true
  command: iptables -A INPUT -i docker0 -j ACCEPT

- name: Allow traffic on all Docker bridges
  become: true
  command: iptables -A INPUT -i br+ -j ACCEPT

- name: Save all current rules to rules.v4
  become: true
  shell: iptables-save > /etc/iptables/rules.v4
